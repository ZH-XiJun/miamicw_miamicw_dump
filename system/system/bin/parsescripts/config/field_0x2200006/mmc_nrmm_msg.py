#!/usr/bin/env python
"""
Copyright Â© Huawei Technologies Co., Ltd. 2010-2019. All rights reserved.
description     :   list mmc nrmm msg
author          :   j00354216
modify  record  :   2019-04-28 create file
"""

mmc_nrmm_msg_enum_table = {
#mmc->nrmm
0x00 : "ID_MMC_NRMM_START_REQ",
0x02 : "ID_MMC_NRMM_POWER_OFF_REQ",
0x04 : "ID_MMC_NRMM_SPEC_PLMN_SRCH_REQ",
0x06 : "ID_MMC_NRMM_STOP_PLMN_SRCH_REQ",
0x08 : "ID_MMC_NRMM_SUSPEND_REQ",
0x0A : "ID_MMC_NRMM_NR_SYS_INFO_NTF",
0x0C : "ID_MMC_NRMM_EPLMN_CFG_NTF",
0x0E : "ID_MMC_NRMM_ANYCELL_PLMN_SRCH_REQ",
0x10 : "ID_MMC_NRMM_PARALLEL_SRCH_START_NTF",
0x12 : "ID_MMC_NRMM_PARALLEL_SRCH_END_NTF",
0x14 : "ID_MMC_NRMM_SYS_CFG_REQ",
0x16 : "ID_MMC_NRMM_DISABLE_LTE_NTF",
0x18 : "ID_MMC_NRMM_ENABLE_LTE_NTF",
0x1A : "ID_MMC_NRMM_CELL_SELECTION_CTRL_NTF",
0x1C : "ID_MMC_NRMM_OOC_STATE_NTF",
0x1E : "ID_MMC_NRMM_HPLMN_INFO_NTF",
0x20 : "ID_MMC_NRMM_USER_SPEC_PLMN_START_NTF",
0x22 : "ID_MMC_NRMM_USER_SPEC_PLMN_END_NTF",
0x24 : "ID_MMC_NRMM_DISABLE_NR_NTF",
0x26 : "ID_MMC_NRMM_ENABLE_NR_NTF",
0x28 : "ID_MMC_NRMM_SUSPEND_REL_NTF",
0x2A : "ID_MMC_NRMM_SUSPEND_RSP",
0x2C : "ID_MMC_NRMM_CELL_SIGN_RPT_NTF",
0x2E : "ID_MMC_NRMM_RESUME_NTF",
0x30 : "ID_MMC_NRMM_PLMN_LIST_SRCH_REQ",
0x32 : "ID_MMC_NRMM_BEGIN_SESSION_NTF",
0x34 : "ID_MMC_NRMM_END_SESSION_NTF",
0x36 : "ID_MMC_NRMM_NET_SCAN_REQ",
0x38 : "ID_MMC_NRMM_NET_SCAN_STOP_REQ",
#nrmm->mmc
0x01 : "ID_NRMM_MMC_START_CNF",
0x03 : "ID_NRMM_MMC_POWER_OFF_CNF",
0x05 : "ID_NRMM_MMC_SPEC_PLMN_SRCH_CNF",
0x07 : "ID_NRMM_MMC_STOP_PLMN_SRCH_CNF",
0x09 : "ID_NRMM_MMC_SUSPEND_CNF",
0x0B : "ID_NRMM_MMC_SYS_INFO_IND",
0x0D : "ID_NRMM_MMC_ANYCELL_PLMN_SRCH_CNF",
0x0F : "ID_NRMM_MMC_AREA_LOST_IND",
0x11 : "ID_NRMM_MMC_SYS_CFG_CNF",
0x13 : "ID_NRMM_MMC_SEARCHED_PLMN_INFO_IND",
0x15 : "ID_NRMM_MMC_SUSPEND_IND",
0x17 : "ID_NRMM_MMC_RESUME_IND",
0x19 : "ID_NRMM_MMC_CELL_SIGN_RPT_IND",
0x1B : "ID_NRMM_MMC_PLMN_LIST_SRCH_CNF",
0x1D : "ID_NRMM_MMC_RADIO_RESOURCE_CHECK_IND",
0x1F : "ID_NRMM_MMC_SOR_INFO_UPDATE_IND",
0x21 : "ID_NRMM_MMC_NET_SCAN_CNF",
0x23 : "ID_NRMM_MMC_NET_SCAN_STOP_CNF",
}

def get_mmc_nrmm_msg_str( MsgId):
    for MsgIdIndex in mmc_nrmm_msg_enum_table.keys():
        if MsgIdIndex == MsgId:
            return mmc_nrmm_msg_enum_table[MsgIdIndex]

    return "none"